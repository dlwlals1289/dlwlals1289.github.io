{"version":3,"sources":["images/robot.png","Main.js","Chating.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","__webpack_require__","p","Main","_ref","history","navigate","useNavigate","React","createElement","className","onClick","Chating","_useState","useState","_useState2","_slicedToArray","messages","setMessages","_useState3","_useState4","_useState5","_useState6","selectedFile","setSelectedFile","_useState7","_useState8","showImages","setShowImages","_useState9","_useState10","reQuestion","setRequestion","_useState11","_useState12","memoryHos","setMemoryHos","displayImagesUser","useRef","imageUrls","sender","imageMessage","i","length","console","log","push","src","alt","style","width","height","displayMessage","displayImagesBot","data","pillImage","pillName","efcyQesitm","method","sendMessageToServer","message","fetch","headers","Content-Type","body","then","response","json","location","entity","pharmacies","answer","pharmacy","renderPharmacy","map","item","index","key","name","address","phone","href","place_url","hos","place","category","JSON","stringify","hospitals","hospital","renderHospital","precaution","responseMessage","concat","sideEffect","axios","intent","catch","error","newMessage","prevMessages","_toConsumableArray","messageElements","_useState13","_useState14","messageInput","setMessageInput","useEffect","current","id","display","flexDirection","justifyContent","marginLeft","marginBottom","image","type","placeholder","value","onChange","e","target","autoComplete","for","class","accept","multiple","files","selectedImages","imageUrlLists","file","currentImageUrl","URL","createObjectURL","formData","FormData","append","s3path","trim","sendMessage","App","BrowserRouter","Routes","Route","path","element","Chat","reportWebVitals","onPerfEntry","Function","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.447a2999.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.f73390b8.png\";","import React from 'react';\nimport Robot from \"./images/robot.png\";\nimport { useNavigate } from 'react-router-dom';\nimport './Main.css';\n\n\nconst Main = ({ history }) => {\n    const navigate = useNavigate();\n\n    const handleClick = () => {\n        navigate('/chat');\n    };\n  \n    return (\n        <div className='main-container'>\n            <div className='top'> \n                <div className='top-text'> \n                    <p className='top-text2'> MEDIBOT은 의약품 정보 제공</p>\n                    <p className='top-text2'> 인공지능 챗봇입니다.</p>\n                </div>\n                <p className='blank'> </p>\n                <p className='blank'></p>\n                <p className='blank'></p>\n            </div>\n            <div className=\"start-button-container\">\n                {/* <h1 className='title1'>MEDIBOT에게 질문하기</h1> */}\n                <p className='title1'>MEDIBOT에게 질문하기</p>\n                <button className=\"start-button\" onClick={handleClick}>\n                대화 시작\n                </button>\n            </div>\n        </div>\n    );\n  };\n  \n\nexport default Main;","import React, { useEffect, useState, useRef } from 'react';\nimport axios from \"axios\";\nimport \"./chat.css\";\nimport Robot from \"./images/robot.png\";\n\nconst Chating = () => {\n    const [messages, setMessages] = useState([]);\n    const [selectedImage, setSelectedImage] = useState(null); // 선택된 이미지를 저장할 상태 추가\n    const [selectedFile, setSelectedFile] = useState([]); // 선택된 이미지를 저장할 상태 추가\n    const [showImages, setShowImages] = useState([]);\n    const [reQuestion, setRequestion] = useState(null);\n    const [memoryHos, setMemoryHos] = useState(null);\n\n    const photoInput = useRef();\n\n\n    const sendMessage = () => {\n        const message = messageInput;\n        if (message.trim() !== '') {\n            displayMessage(message, 'user');\n            sendMessageToServer(message);\n            setMessageInput('');\n        }\n    };\n\n    // 이미지를 업로드하는 함수\n    // const handleImageUpload = (e) => {\n    //     const file = e.target.files[0]; // 선택한 파일 가져오기\n    //     setSelectedFile(file);\n    //     // uploadImage();\n    //     encodeFileToBase64(e.target.files[0]);\n\n        \n    // };\n    const handleImageUpload = (e) => {\n        const files = e.target.files; // 선택한 파일들 가져오기\n        const selectedImages = [];\n        let fileURLs = [];\n        // let imageUrlLists = [...showImages];\n        let imageUrlLists = [];\n      \n        for (let i = 0; i < files.length; i++) {\n          const file = files[i];\n          \n          selectedImages.push(file);\n\n          const currentImageUrl = URL.createObjectURL(files[i]);\n          console.log(currentImageUrl);\n          imageUrlLists.push(currentImageUrl);  \n\n        }\n        \n        setShowImages(imageUrlLists);\n      \n        setSelectedFile(selectedImages);\n        // uploadImages();\n      };\n\n    \n    const uploadImages = () => {\n        if (selectedFile && selectedFile.length > 0) {\n\n            let imageUrlLists = [];\n\n            for (let i = 0; i < selectedFile.length; i++) {\n                const file = selectedFile[i];\n                      \n                const currentImageUrl = URL.createObjectURL(selectedFile[i]);\n                imageUrlLists.push(currentImageUrl);  \n            }\n            displayImagesUser(imageUrlLists, 'user');\n\n            const responseMessage = \"조금만 기다려주세요~ 사진을 분석중입니다!\"\n            displayMessage(responseMessage, 'bot2');\n\n        \n          var formData = new FormData();\n          console.log(selectedFile.length);\n          \n          for (let i = 0; i < selectedFile.length; i++) {\n            // const name = `multipartFile`\n            formData.append(\"multipartFile\" , selectedFile[i]);\n          }\n\n          setShowImages([]);\n          // 서버로 이미지를 업로드하는 API 호출\n        //   fetch('http://localhost:8080/s3/pillImage', {\n          fetch('http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/s3/pillImage', {\n            method: 'POST',\n            // headers: {\n            //     'Content-Type': 'application/x-www-form-urlencoded'\n            //   },\n            body: formData,\n          })\n            .then(response => response.json())\n            .then(data => {\n              // 이미지 업로드 성공 시 처리\n              // data에서 이미지 경로를 받아서 처리\n              console.log(data);\n              const userImageUrls = data[0].s3path;\n\n              if(data[0].pillName === null){\n                const responseMessage = \"죄송합니다. 찾을 수 없습니다.\"\n                displayMessage(responseMessage, 'bot2');\n              }\n              else{\n                  const imageUrls = data.map(item => item.pillImage);\n                  displayImagesBot(data, 'bot2');\n              }\n            })\n            .catch(error => {\n              console.error('Error:', error);\n            });\n      \n          setSelectedFile([]);\n        }\n        else{\n            sendMessage();\n        }\n    };\n      \n\n    // const displayImage = (imageUrl) => {\n    //     // 이미지 메시지를 채팅에 표시\n    //     const imageMessage = <img src={imageUrl} alt=\"Uploaded\" style={{width: '300px'}}/>;\n    //     displayMessage(imageMessage, 'user');  \n    // };\n    const displayImagesUser = (imageUrls, sender) => {\n        // 이미지 메시지를 채팅에 표시\n        var imageMessage = [];\n        for (let i = 0; i < imageUrls.length; i++) {\n            console.log(imageUrls[i])\n            imageMessage.push(<img src={imageUrls[i]} alt=\"Uploaded\" style={{ width: '300px', height: '300px'}} />);\n        }\n        displayMessage(imageMessage, 'user2'); \n        // displayMessage(imageMessage, 'user'); \n      };\n\n      const displayImagesBot = (data, sender) => {\n        // 이미지 메시지를 채팅에 표시\n        for (let i = 0; i < data.length; i++) {\n            if(data[i].pillImage != null){\n                var imageMessage = (\n                    <div >\n                        <div>\n                            <img src={data[i].pillImage} alt=\"Uploaded\" style={{ width: '300px', height: '200px'}} />\n                            <h2>{data[i].pillName}</h2>\n                            <div className='pillInfo'>\n                                <p className='pillInfo2'>효능: </p>\n                                <p >{data[i].efcyQesitm}</p>\n                            </div>\n                            <div className='pillInfo'>\n                                <p className='pillInfo2'>복용방법: </p>\n                                <p >{data[i].method}</p>\n                            </div>\n                        </div>\n                    </div>\n                );\n                displayMessage(imageMessage, sender); \n            }\n            else{\n                var imageMessage = (\n                    <div >\n                        <div >\n                            <h2>{data[i].pillName}</h2>\n                            <div className='pillInfo'>\n                                <p className='pillInfo2'>효과: </p>\n                                <p >{data[i].efcyQesitm}</p>\n                            </div>\n                            <div className='pillInfo'>\n                                <p className='pillInfo2'>복용방법: </p>\n                                <p >{data[i].method}</p>\n                            </div>\n                        </div>\n                    </div>\n                );\n                displayMessage(imageMessage, sender); \n            }\n            \n        }\n\n    };\n\n    const sendMessageToServer = (message) => {\n        // const url = 'http://localhost:8080/question'; \n        // const url = 'http://ec2-54-180-124-60.ap-northeast-2.compute.amazonaws.com:8080/question'; \n\n        if(reQuestion === 1){\n            // const url = 'http://localhost:8080/pharmacy';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/pharmacy';\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: message ,\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const location = data.entity;\n                var pharmacies = data.answer.pharmacy;\n                    \n                const renderPharmacy = (\n                    <div >\n                        <div >\n                            <h3 > {location} 근처 약국 목록입니다.</h3>\n                            \n                            {pharmacies.map((item, index) => (\n                                <div >\n                                    <ul>\n                                        <li key={index}>\n                                        <h3>{item.name}</h3>\n                                        <p>주소: {item.address}</p>\n                                        <p>전화번호: {item.phone}</p>\n                                        <a href={item.place_url}>장소 바로가기</a>\n                                        </li>\n                                    </ul>\n                                </div>\n                            ))}\n                        </div>\n                    </div>\n                );\n                    \n                displayMessage(renderPharmacy, 'bot2');\n                setRequestion(null);\n\n            })\n        }\n        else if(reQuestion === 21){\n            // const url = 'http://localhost:8080/hospital';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/hospital';\n            const hos = {\n                place : message,\n                category : memoryHos\n            }\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(hos),\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const location = data.entity;\n                var hospitals = data.answer.hospital;\n\n                const renderHospital = (\n                    <div >\n                        <div\n                        >\n                            <h3 > {location} 목록입니다.</h3>\n                            <ul>\n                            {hospitals.map((item, index) => (\n                                <li key={index}>\n                                <h3>{item.name}</h3>\n                                <p>주소: {item.address}</p>\n                                <p>전화번호: {item.phone}</p>\n                                <a href={item.place_url}>장소 바로가기</a>\n                                </li>\n                            ))}\n                            \n                            </ul>\n                        </div>\n                    </div>\n                );\n\n                displayMessage(renderHospital, 'bot2');\n                setRequestion(null);\n                setMemoryHos(null);\n            })\n        }\n        else if(reQuestion === 22){\n            // const url = 'http://localhost:8080/hospital';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/hospital';\n            const hos = {\n                place : memoryHos,\n                category : message\n            }\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify(hos),\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const location = data.entity;\n                var hospitals = data.answer.hospital;\n\n                const renderHospital = (\n                    <div >\n                        <div\n                        >\n                            <h3 > {location} 목록입니다.</h3>\n                            <ul>\n                            {hospitals.map((item, index) => (\n                                <li key={index}>\n                                <h3>{item.name}</h3>\n                                <p>주소: {item.address}</p>\n                                <p>전화번호: {item.phone}</p>\n                                <a href={item.place_url}>장소 바로가기</a>\n                                </li>\n                            ))}\n                            \n                            </ul>\n                        </div>\n                    </div>\n                );\n\n                displayMessage(renderHospital, 'bot2');\n                setRequestion(null);\n                setMemoryHos(null);\n            })\n        }\n        else if(reQuestion === 0){\n            // const url = 'http://localhost:8080/precaution';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/precaution';\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: message ,\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const pillName = data.entity;\n                const precaution = data.answer.precaution;\n                const responseMessage = \n                    `${pillName}의 주의사항은 다음과 같습니다.\n\n${precaution}`;\n                displayMessage(responseMessage, 'bot2');\n                setRequestion(null);\n            })\n        }\n        else if(reQuestion === 3){\n            // const url = 'http://localhost:8080/sideEffect';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/sideEffect';\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: message ,\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const pillName = data.entity;\n                const sideEffect = data.answer.sideEffect;\n                const responseMessage = \n                    `${pillName}의 부작용은 다음과 같습니다.\n\n${sideEffect}`;\n                displayMessage(responseMessage, 'bot2');\n                setRequestion(null);\n            })\n\n        }\n        else if(reQuestion === 4){\n            // const url = 'http://localhost:8080/effect';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/effect';\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: message ,\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const pillName = data.entity;\n                const efcyQesitm = data.answer.efcyQesitm;\n                const responseMessage = \n                    `${pillName}의 효능은 다음과 같습니다.\n\n${efcyQesitm}`;\n                displayMessage(responseMessage, 'bot2');\n                setRequestion(null);\n            })\n        }\n        else if(reQuestion === 5){\n            // const url = 'http://localhost:8080/method';\n            const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/method';\n            fetch(url, {\n                method: 'POST',\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                body: message ,\n            })\n            .then(response =>response.json())\n            .then(data => {\n                console.log(reQuestion);\n                const pillName = data.entity;\n                const method = data.answer.method;\n                const responseMessage = \n                    `${pillName}의 복용법은 다음과 같습니다.\n\n${method}`;\n                displayMessage(responseMessage, 'bot2');\n                setRequestion(null);\n            })\n        }\n        else{\n            const url = 'http://localhost:8080/question';\n            // const url = 'http://ec2-15-165-255-245.ap-northeast-2.compute.amazonaws.com:8080/question';\n            axios(url, {\n                method: \"post\", // 다른 옵션도 가능합니다 (post, put, delete, etc.)\n                headers: {\n                    'Content-Type': 'application/json',\n                },\n                data: JSON.stringify(message) ,\n            })\n            // fetch(url, {\n            //     method: 'POST',\n            //     headers: {\n            //         'Content-Type': 'application/json',\n            //     },\n            //     body: message ,\n            // })\n            .then(response =>response.json())\n            .then(data => {\n                let entities = [];\n                let responseMessage = \"\";\n\n                console.log(data.intent);\n    \n                if (data.intent === 0) {\n                    if(data.entity === null){\n                        const renderPharmacy = \"어떤 의약품의 주의사항을 알고 싶으신가요?\";\n                        setRequestion(data.intent);\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else if(data.answer.precaution === null){\n                        const renderPharmacy = data.entity+\"의 주의사항에 대한 정보를 찾을 수 없습니다.\"\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else{\n                        const pillName = data.entity;\n                        const precaution = data.answer.precaution;\n                        responseMessage = \n                            `${pillName}의 주의사항은 다음과 같습니다.\n        \n${precaution}`;\n                        displayMessage(responseMessage, 'bot2');\n                    }\n                }\n                else if (data.intent === 1) { // 약국\n                    console.log(\"pharmacy\");\n                    const location = data.entity;\n    \n                    if(location === null){\n                        const renderPharmacy = \"어느 지역 주변의 약국을 알고 싶으신가요?\";\n                        setRequestion(data.intent);\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else{\n                        var pharmacies = data.answer.pharmacy;\n                    \n                        const renderPharmacy = (\n                            <div >\n                                <div >\n                                    <h3 > {location} 근처 약국 목록입니다.</h3>\n                                    \n                                    {pharmacies.map((item, index) => (\n                                        <div >\n                                            <ul>\n                                                <li key={index}>\n                                                <h3>{item.name}</h3>\n                                                <p>주소: {item.address}</p>\n                                                <p>전화번호: {item.phone}</p>\n                                                <a href={item.place_url}>장소 바로가기</a>\n                                                </li>\n                                            </ul>\n                                        </div>\n                                    ))}\n                                </div>\n                            </div>\n                        );\n                    \n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    \n                }\n                else if (data.intent === 2) {\n\n                    if(data.entity === null){\n                        const renderHospital = \"죄송합니다. 해당 정보를 찾을 수 없습니다.\";\n                        displayMessage(renderHospital, 'bot2');\n                    }\n                    else if(data.answer.hospital === 21){\n                        const renderHospital = \"어느 지역의 \" + data.entity + \" 정보를 알고 싶으신가요?\";\n                        displayMessage(renderHospital, 'bot2');\n                        setRequestion(21);\n                        setMemoryHos(data.entity);\n                    }\n                    else if(data.answer.hospital === 22){\n                        const renderHospital = data.entity + \"의 어떤 병원 정보를 알고 싶으신가요?\";\n                        displayMessage(renderHospital, 'bot2');\n                        setRequestion(22);\n                        setMemoryHos(data.entity);\n                    }\n                    else{\n                        const location = data.entity;\n                        var hospitals = data.answer.hospital;\n        \n                        const renderHospital = (\n                            <div >\n                                <div\n                                >\n                                    <h3 > {location} 목록입니다.</h3>\n                                    <ul>\n                                    {hospitals.map((item, index) => (\n                                        <li key={index}>\n                                        <h3>{item.name}</h3>\n                                        <p>주소: {item.address}</p>\n                                        <p>전화번호: {item.phone}</p>\n                                        <a href={item.place_url}>장소 바로가기</a>\n                                        </li>\n                                    ))}\n                                    \n                                    </ul>\n                                </div>\n                            </div>\n                        );\n    \n                        displayMessage(renderHospital, 'bot2');\n                    }\n                    \n                }\n                else if (data.intent === 3) {\n                    if(data.entity === null){\n                        const renderPharmacy = \"어떤 의약품의 부작용을 알고 싶으신가요?\";\n                        setRequestion(data.intent);\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else if(data.answer.sideEffect === null){\n                        const renderPharmacy = data.entity+\"의 부작용에 대한 정보를 찾을 수 없습니다.\"\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else{\n                        const pillName = data.entity;\n                        const sideEffect = data.answer.sideEffect;\n                        responseMessage = \n                            `${pillName}의 부작용은 다음과 같습니다.\n        \n${sideEffect}`;\n                        displayMessage(responseMessage, 'bot2');\n                    }\n                }\n                else if (data.intent === 4) {\n                    if(data.entity === null){\n                        const renderPharmacy = \"어떤 의약품의 효능을 알고 싶으신가요?\";\n                        setRequestion(data.intent);\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else if(data.answer.efcyQesitm === null){\n                        const renderPharmacy = data.entity+\"의 효능에 대한 정보를 찾을 수 없습니다.\"\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else{\n                        const pillName = data.entity;\n                        const efcyQesitm = data.answer.efcyQesitm;\n                        responseMessage = \n                            `${pillName}의 효능은 다음과 같습니다.\n        \n${efcyQesitm}`;\n                        displayMessage(responseMessage, 'bot2');\n                    }\n                }\n                else if (data.intent === 5) {\n                    if(data.entity === null){\n                        const renderPharmacy = \"어떤 의약품의 복용법을 알고 싶으신가요?\";\n                        setRequestion(data.intent);\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else if(data.answer.method === null){\n                        const renderPharmacy = data.entity+\"의 복용방법에 대한 정보를 찾을 수 없습니다.\"\n                        displayMessage(renderPharmacy, 'bot2');\n                    }\n                    else{\n                        const pillName = data.entity;\n                        const method = data.answer.method;\n                        responseMessage = \n                            `${pillName}의 복용법은 다음과 같습니다.\n        \n${method}`;\n                        displayMessage(responseMessage, 'bot2');\n                    }\n                }\n                else if (data.intent === 100){\n                    responseMessage = data.entity;\n    \n                    displayMessage(responseMessage, 'bot2');\n                }\n            })\n            .catch(error => {\n                console.log(error.message);\n                const responseMessage = \"죄송합니다. 정보를 찾을 수 없습니다.\"\n                displayMessage(responseMessage, 'bot2');\n            });\n        }\n        \n    };\n\n    const displayMessage = (message, sender) => {\n        const newMessage = { message, sender };\n        setMessages(prevMessages => [...prevMessages, newMessage]);\n    };\n\n    const handleInputChange = (e) => {\n        setMessageInput(e.target.value);\n    };\n\n    const messageElements = messages.map((message, index) => (\n        <div\n            // style={{ display: 'flex', flexDirection: 'column',\n            // justifyContent: 'flex-end', marginLeft: 'auto'  }}\n            className={`${message.sender}-container`}\n            >\n            <div className={`image-${message.sender}`} ></div>\n            <div\n                key={index}\n                className={`message ${message.sender}-message`}\n            >\n                <p>{message.message}</p>\n            </div>\n        </div>\n    ));\n\n    // const firstMessage => ()\n\n    const [messageInput, setMessageInput] = useState('');\n\n    const handleClick = () => {\n        photoInput.current.click();\n    };\n\n    const encodeFileToBase64 = (fileBlob) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(fileBlob);\n    return new Promise((resolve) => {\n        reader.onload = () => {\n            // setSelectedImage(reader.result);\n            resolve();\n        };\n    });\n    };\n\n    useEffect(() => {\n        setShowImages((current) => current);\n    }, [showImages]);\n    \n    return (\n        <div>\n            <div className=\"chat-container\">\n                {/* <header>\n                    <div className=\"image-bot2\" ></div>\n                    <h1>MEDIBOT</h1>\n                    <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        className ='image-button'\n                        ref={photoInput}\n                        onChange={handleImageUpload}\n                        style={{display: 'none'}} \n                    />\n                </header> */}\n\n                <div className=\"chat-window\" id=\"chat-window\">\n                    <div\n                    style={{ display: 'flex', flexDirection: 'row',\n                    justifyContent: 'flex-start', marginLeft: 'auto',\n                    marginBottom: '10px'  }}>\n                        <div className=\"image-bot2\" ></div>\n                        <div className=\"message bot2-message\">\n                            <p>안녕하세요. 무엇이 궁금하시나요?</p>\n                        </div>\n                    </div>\n                    {messageElements}\n                </div>\n                <div className='preview-container'>\n                    {/* 저장해둔 이미지들을 순회하면서 화면에 이미지 출력 */}\n                    <p></p>\n                    {showImages.map((image) => (\n                        <div className=\"preview\">\n                            <img src={image} alt=\"preview-img\" style={{ width: '100px', height: '100px'}}/>\n                            {/* <Delete onClick={() => handleDeleteImage(id)} /> */}\n                        </div>))}\n                </div>\n                <div className=\"input-area\">\n                    <input\n                        type=\"text\"\n                        id=\"message-input\"\n                        placeholder=\"메시지를 입력하세요\"\n                        value={messageInput}\n                        onChange={handleInputChange}\n                        autoComplete='off'\n                    />\n                    {/* <input\n                        type=\"file\"\n                        accept=\"image/*\"\n                        className ='image-button'\n                        onChange={handleImageUpload}\n                    /> */}\n                    \n                    {/* <button onClick={sendMessage} id=\"send-button\">SEND</button> */}\n                    <label for=\"fileSelect\">\n                        <div class=\"btn-upload\"></div>\n                    </label>\n                    <input\n                    type=\"file\"\n                    id='fileSelect'\n                    accept=\"image/*\"\n                    multiple  // 다중 이미지 선택을 위한 속성 추가\n                    onChange={handleImageUpload}\n                    // style={{ display: 'none' }}\n                    />\n                    <button onClick={uploadImages} id=\"upload-image-button\">전송</button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\n\nexport default Chating;\n","import React from \"react\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Main from './Main';\nimport Chat from './Chating';\n\nfunction App() {\n    return (\n      <BrowserRouter>\n        <div className='App'>\n          <Routes>\n            <Route path=\"/\" element={<Main />}></Route>\n            <Route path=\"/chat\" element={<Chat />}></Route>\n          </Routes>\n        </div>\n      </BrowserRouter>\n      \n    );\n};\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();"],"sourceRoot":""}